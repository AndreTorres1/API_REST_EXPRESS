{
  "swagger": "2.0",
  "info": {
    "title": "Movies API",
    "description": "This API allows for users to retrieve and update movies",
    "version": "1.0"
  },
  "servers": [
    "localhost:3000"
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "x-access-token",
      "in": "header",
      "description": "Enter the authentication token"
    }
  },
  "parameters": {
    "recipe": {
      "name": "recipe",
      "in": "body",
      "description": "A new recipe to be created",
      "required": true,
      "schema": {
        "name": {}
      }
    },
    "userIDinPath": {
      "name": "id",
      "in": "path",
      "description": "The ID of the User",
      "required": true,
      "schema": {
        "type": "string"
      },
      "default": ""
    },
    "title": {
      "name": "title",
      "in": "path",
      "description": "The title of the Movie",
      "required": true,
      "schema": {
        "type": "string"
      },
      "default": "Ganglands"
    },
    "show_id": {
      "name": "show_id",
      "in": "path",
      "description": "The ID of the Movie",
      "required": true,
      "schema": {
        "type": "integer"
      },
      "default": ""
    },
    "email": {
      "name": "email",
      "description": "email para autenticação",
      "required": true,
      "in": "header",
      "default": "admin@admin"
    },
    "password": {
      "name": "password",
      "description": "password para autenticação",
      "required": true,
      "in": "header",
      "default": "12456"
    },
    "userBody": {
      "name": "name",
      "description": "User info",
      "required": true,
      "in": "body",
      "schema": {
        "type": "string",
        "default": "{\n    \"email\":\"default@default\",\n    \"password\":\"default\",\n    \"permissao\": \"admin\"\n}"
      }
    },
    "movieBody": {
      "name": "name",
      "description": "Movie info",
      "required": true,
      "in": "body",
      "schema": {
        "type": "string",
        "default": "{\n    \"type\":\"default@default\",\n    \"title\":\"default\",\n    \"director\": \"admin\",\n    \"cast\":\"default\",\n    \"country\":\"default\",\n    \"date_added\":\"default\",\n    \"rating\":\"default\",\n    \"duration\":\"default\",\n    \"listed_in\":\"default\",\n    \"description\":\"default\",\n    \"release_year\":2009\n}"
      }
    }
  },
  "paths": {
    "/version": {
      "get": {
        "tags": [
          "Version"
        ],
        "description": "Retrieves the current version of the API",
        "responses": {
          "200": {
            "description": "This endpoint always returns with success"
          },
          "401": {
            "description": "Error making authentication"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieves all the available users",
        "responses": {
          "200": {
            "description": "This endpoint always returns with success"
          },
          "401": {
            "description": "Error making authentication"
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Insert a new user into the database",
        "responses": {
          "201": {
            "description": "If the user was created successfully"
          },
          "400": {
            "description": "If an error occurs"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/userBody"
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieves a user with specific ID",
        "parameters": [
          {
            "$ref": "#/parameters/userIDinPath"
          }
        ],
        "responses": {
          "200": {
            "description": "If the user exists"
          },
          "404": {
            "description": "If there is no user with the given name"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Updates a user with specific ID",
        "parameters": [
          {
            "$ref": "#/parameters/userIDinPath"
          },
          {
            "$ref": "#/parameters/userBody"
          }
        ],
        "responses": {
          "200": {
            "description": "If the user is updated"
          },
          "404": {
            "description": "If there is no user with the given ID"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Deletes a user with specific ID",
        "parameters": [
          {
            "$ref": "#/parameters/userIDinPath"
          }
        ],
        "responses": {
          "200": {
            "description": "If the user is deleted"
          },
          "404": {
            "description": "If there is no user with the given ID"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Makes a user login",
        "parameters": [
          {
            "name": "user",
            "description": "user info",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "description": "user email for authentication",
                  "default": "default@default"
                },
                "password": {
                  "type": "string",
                  "description": "user password for authentication",
                  "default": "default"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If login is successfull"
          },
          "404": {
            "description": "If there is no user with the given data"
          }
        }
      }
    },
    "/movies/{title}/cast": {
      "get": {
        "description": "Retrieves the cast of a movie title",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/title"
          }
        ],
        "responses": {
          "200": {
            "description": "If the title exists, it retrieves its cast"
          },
          "404": {
            "description": "If there is no title with the given name"
          }
        }
      }
    },
    "/movies": {
      "get": {
        "tags": [
          "Movies"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieves all the available movies",
        "responses": {
          "200": {
            "description": "This endpoint always returns with success"
          }
        }
      },
      "post": {
        "tags": [
          "Movies"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Insert a new movie into the database",
        "responses": {
          "201": {
            "description": "If the movie was created successfully"
          },
          "400": {
            "description": "If an error occurs"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/movieBody"
          }
        ]
      }
    },
    "/movies/{show_id}": {
      "get": {
        "tags": [
          "Movies"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Retrieves a movie with specific ID",
        "parameters": [
          {
            "$ref": "#/parameters/show_id"
          }
        ],
        "responses": {
          "200": {
            "description": "If the Movie exists"
          },
          "404": {
            "description": "If there is no movie with the given ID"
          }
        }
      },
      "delete": {
        "tags": [
          "Movies"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Deletes a movie with specific ID",
        "parameters": [
          {
            "$ref": "#/parameters/show_id"
          }
        ],
        "responses": {
          "200": {
            "description": "If the user is deleted"
          },
          "404": {
            "description": "If there is no user with the given ID"
          }
        }
      },
      "put": {
        "tags": [
          "Movies"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Updates a Movie with specific ID",
        "parameters": [
          {
            "$ref": "#/parameters/show_id"
          },
          {
            "$ref": "#/parameters/movieBody"
          }
        ],
        "responses": {
          "200": {
            "description": "If the user is updated"
          },
          "404": {
            "description": "If there is no user with the given ID"
          }
        }
      }
    }
  }
}